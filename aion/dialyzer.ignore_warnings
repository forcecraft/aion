:0: Unknown function 'Elixir.Comeonin.Bcrypt':checkpw/2
:0: Unknown function 'Elixir.Comeonin.Bcrypt':dummy_checkpw/0
:0: Unknown function 'Elixir.Comeonin.Bcrypt':hashpwsalt/1
:0: Unknown function 'Elixir.Guardian.Phoenix.Socket':sign_in/2
:0: Unknown function 'Elixir.Guardian.Plug':api_sign_in/2
:0: Unknown function 'Elixir.Guardian.Plug':claims/1
:0: Unknown function 'Elixir.Guardian.Plug':current_resource/1
:0: Unknown function 'Elixir.Guardian.Plug':current_token/1
:0: Unknown function 'Elixir.Guardian.Plug.EnsureAuthenticated':call/2
:0: Unknown function 'Elixir.Guardian.Plug.LoadResource':call/2
:0: Unknown function 'Elixir.Guardian.Plug.VerifyHeader':call/2
:0: Unknown function 'Elixir.Phoenix.LiveReloader':call/2
lib/aion/room_channel/room.ex:51: Invalid type specification for function 'Elixir.Aion.RoomChannel.Room':change_question/2. The success typing is (atom() | #{'__struct__':=atom(), atom()=>_},binary()) -> #{'__struct__':=atom(), atom()=>_}
lib/aion/room_channel/room.ex:79: Invalid type specification for function 'Elixir.Aion.RoomChannel.Room':get_new_question_with_answers/1. The success typing is (binary()) -> #{'answers':=[map()], 'question':=#{'__meta__':=map(), '__struct__':='Elixir.Aion.Question', 'category':=map(), 'category_id':='nil', 'content':=_, 'id':=integer(), 'image_name':=_, 'inserted_at':='nil', 'updated_at':='nil'}}
web/auth/serializer.ex:1: Callback info about the 'Elixir.Guardian.Serializer' behaviour is not available
web/channels/presence.ex:75: The inferred return type of init/1 ({'ok',#{'node_name':=binary(), 'pubsub_server':=atom(), 'task_sup':='Elixir.Aion.Presence.TaskSupervisor'}}) has nothing in common with {'error',_} | {'ok',pid()}, which is the expected return type for the callback of the 'Elixir.Phoenix.Presence' behaviour
web/channels/room_channel.ex:12: The return type {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=_, 'channel':=_, 'channel_pid':=_, 'endpoint':=_, 'handler':=_, 'id':=_, 'joined':=_, 'pubsub_server':=_, 'ref':=_, 'serializer':=_, 'topic':=_, 'transport':=_, 'transport_name':=_, 'transport_pid':=_}} in the specification of join/3 is not a subtype of {'error',map()} | {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}} | {'ok',map(),#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}}, which is the expected return type for the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:13: The inferred type for the 3rd argument of join/3 (#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [{_,_}] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=binary(), _=>_}) is not a supertype of #{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}, which is expected type for this argument in the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:13: The inferred return type of join/3 ({'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [any()] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=binary(), _=>_}}) has nothing in common with {'error',map()} | {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}} | {'ok',map(),#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}}, which is the expected return type for the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:32: The inferred type for the 2nd argument of terminate/2 (#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [{_,_}] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=<<_:48,_:_*8>>, _=>_}) is not a supertype of #{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}, which is expected type for this argument in the callback of the 'Elixir.Phoenix.Channel' behaviour
web/models/question.ex:39: Invalid type specification for function 'Elixir.Aion.Question':get_random_question/1. The success typing is (binary()) -> #{'__meta__':=#{'__struct__':='Elixir.Ecto.Schema.Metadata', 'context':='nil', 'source':={'nil',<<_:72>>}, 'state':='built'}, '__struct__':='Elixir.Aion.Question', 'category':=#{'__cardinality__':='one', '__field__':='category', '__owner__':='Elixir.Aion.Question', '__struct__':='Elixir.Ecto.Association.NotLoaded'}, 'category_id':='nil', 'content':=_, 'id':=_, 'image_name':=_, 'inserted_at':='nil', 'updated_at':='nil'}
lib/aion/room_channel/question_set.ex:14: Invalid type specification for function 'Elixir.Aion.RoomChannel.QuestionSet':create/2. The success typing is (maybe_improper_list(),_) -> #{'answers':=[map()], 'current_question':=atom() | #{'id':=integer(), _=>_}, 'questions':=_}
lib/aion/room_channel/question_set.ex:29: Invalid type specification for function 'Elixir.Aion.RoomChannel.QuestionSet':build_new/2. The success typing is (atom() | #{'id':=integer(), _=>_},_) -> #{'answers':=[map()], 'current_question':=atom() | #{'id':=integer(), _=>_}, 'questions':=_}
web/models/question.ex:49: Invalid type specification for function 'Elixir.Aion.Question':get_random_question/1. The success typing is (binary()) -> #{'__meta__':=#{'__struct__':='Elixir.Ecto.Schema.Metadata', 'context':='nil', 'source':={'nil',<<_:72>>}, 'state':='built'}, '__struct__':='Elixir.Aion.Question', 'category':=#{'__cardinality__':='one', '__field__':='category', '__owner__':='Elixir.Aion.Question', '__struct__':='Elixir.Ecto.Association.NotLoaded'}, 'category_id':='nil', 'content':=_, 'id':=_, 'image_name':=_, 'inserted_at':='nil', 'updated_at':='nil'}
lib/aion/room_channel/monitor.ex:35: The call 'Elixir.GenServer':call(binary(),message@1::'stop' | {'get_current_question'} | {'get_room_id'} | {'get_scores'} | {'new_question',_} | {'user_joined',_} | {'user_left',_} | {'new_answer',_,_}) will never return since it differs in the 1st argument from the success typing arguments: (atom() | pid() | {atom(),_} | {'via',atom(),_},any())
lib/aion/room_channel/question_set.ex:28: The call 'Elixir.Aion.RoomChannel.QuestionSet':new(last_question@1::any(),remaining_questions@1::#{'__meta__':=_, '__struct__':='Elixir.Aion.Question', 'category':=_, 'category_id':=_, 'content':=binary(), 'id':=_, 'image_name':=binary(), 'inserted_at':=_, 'updated_at':=_}) breaks the contract ('Elixir.Aion.Question':t(),['Elixir.Aion.Question':t()]) -> 'Elixir.Aion.RoomChannel.QuestionSet':t()
lib/aion/room_channel/question_set.ex:20: Invalid type specification for function 'Elixir.Aion.RoomChannel.QuestionSet':change_question/2. The success typing is (atom() | #{'questions':=maybe_improper_list(), _=>_},_) -> #{'__struct__':='Elixir.Aion.RoomChannel.QuestionSet', 'answers':=[map()], 'current_question':=atom() | #{'id':=integer(), _=>_}, 'next_question':='nil', 'questions':=_}
lib/aion/room_channel/question_set.ex:36: Invalid type specification for function 'Elixir.Aion.RoomChannel.QuestionSet':new/2. The success typing is (atom() | #{'id':=integer(), _=>_},_) -> #{'__struct__':='Elixir.Aion.RoomChannel.QuestionSet', 'answers':=[map()], 'current_question':=atom() | #{'id':=integer(), _=>_}, 'next_question':='nil', 'questions':=_}
lib/aion/room_channel/question_set.ex:48: Invalid type specification for function 'Elixir.Aion.RoomChannel.QuestionSet':load_questions/1. The success typing is (integer()) -> #{'__struct__':='Elixir.Aion.RoomChannel.QuestionSet', 'answers':=[], 'current_question':='nil', 'next_question':='nil', 'questions':=[any()]}
web/channels/room_channel.ex:21: The return type {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=_, 'channel':=_, 'channel_pid':=_, 'endpoint':=_, 'handler':=_, 'id':=_, 'joined':=_, 'pubsub_server':=_, 'ref':=_, 'serializer':=_, 'topic':=_, 'transport':=_, 'transport_name':=_, 'transport_pid':=_}} in the specification of join/3 is not a subtype of {'error',map()} | {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}} | {'ok',map(),#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}}, which is the expected return type for the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:22: The inferred type for the 3rd argument of join/3 (#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [{_,_}] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=binary(), _=>_}) is not a supertype of #{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}, which is expected type for this argument in the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:22: The inferred return type of join/3 ({'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [any()] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=binary(), _=>_}}) has nothing in common with {'error',map()} | {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}} | {'ok',map(),#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}}, which is the expected return type for the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:41: The inferred type for the 2nd argument of terminate/2 (#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [{_,_}] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=<<_:48,_:_*8>>, _=>_}) is not a supertype of #{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}, which is expected type for this argument in the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:96: The call timer:send_after(timeout@1::'ok','room_state_timeout') will never return since the success typing is (non_neg_integer(),any()) -> {'error',_} | {'ok',timer:tref()} and the contract is (Time,Message) -> {'ok',TRef} | {'error',Reason} when Time :: time(), Message :: term(), TRef :: tref(), Reason :: term()
web/channels/room_channel.ex:131: Function send_display_question/1 has no local return
web/channels/room_channel.ex:132: The call 'Elixir.Phoenix.Channel':'broadcast!'(socket@1::atom() | #{'topic':=<<_:48,_:_*8>>, _=>_},#{#<100>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<95>(8, 1, 'integer', ['unsigned', 'big']), #<113>(8, 1, 'integer', ['unsigned', 'big']), #<117>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big'])}#,<<>>) will never return since it differs in the 3rd argument from the success typing arguments: (#{'__struct__':='Elixir.Phoenix.Socket', 'joined':='true', _=>_},binary(),map())
web/channels/room_channel.ex:135: Function send_question_break/1 has no local return
web/channels/room_channel.ex:136: The call 'Elixir.Phoenix.Channel':'broadcast!'(socket@1::atom() | #{'topic':=<<_:48,_:_*8>>, _=>_},#{#<113>(8, 1, 'integer', ['unsigned', 'big']), #<117>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<95>(8, 1, 'integer', ['unsigned', 'big']), #<98>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<107>(8, 1, 'integer', ['unsigned', 'big'])}#,<<>>) will never return since it differs in the 3rd argument from the success typing arguments: (#{'__struct__':='Elixir.Phoenix.Socket', 'joined':='true', _=>_},binary(),map())
web/channels/question_chronicle.ex:55: Invalid type specification for function 'Elixir.Aion.QuestionChronicle':change_room_state/2. The success typing is (binary(),fun(() -> any())) -> {'ok',{5000 | 10000,'break' | 'question'}}
web/channels/room_channel.ex:20: The return type {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=_, 'channel':=_, 'channel_pid':=_, 'endpoint':=_, 'handler':=_, 'id':=_, 'joined':=_, 'pubsub_server':=_, 'ref':=_, 'serializer':=_, 'topic':=_, 'transport':=_, 'transport_name':=_, 'transport_pid':=_}} in the specification of join/3 is not a subtype of {'error',map()} | {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}} | {'ok',map(),#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}}, which is the expected return type for the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:21: The inferred type for the 3rd argument of join/3 (#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [{_,_}] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=binary(), _=>_}) is not a supertype of #{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}, which is expected type for this argument in the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:21: The inferred return type of join/3 ({'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [any()] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=binary(), _=>_}}) has nothing in common with {'error',map()} | {'ok',#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}} | {'ok',map(),#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}}, which is the expected return type for the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:44: The inferred type for the 2nd argument of terminate/2 (#{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=atom() | #{'guardian_default_claims':='nil' | [{_,_}] | map(), _=>_}, 'channel_pid':=pid(), 'topic':=<<_:48,_:_*8>>, _=>_}) is not a supertype of #{'__struct__':='Elixir.Phoenix.Socket', 'assigns':=#{}, 'channel':=atom(), 'channel_pid':=pid(), 'endpoint':=atom(), 'handler':=atom(), 'id':='nil', 'joined':=boolean(), 'pubsub_server':=atom(), 'ref':=_, 'serializer':=atom(), 'topic':=binary(), 'transport':=atom(), 'transport_name':=atom(), 'transport_pid':=pid()}, which is expected type for this argument in the callback of the 'Elixir.Phoenix.Channel' behaviour
web/channels/room_channel.ex:97: The pattern 'uninitialized' can never match the type 'break' | 'question'
web/channels/question_chronicle.ex:59: Invalid type specification for function 'Elixir.Aion.QuestionChronicle':change_room_state/2. The success typing is (binary(),fun(() -> any())) -> {'ok',{5000 | 10000,'break' | 'question'}}

